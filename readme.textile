h1. elexis-3-base

Elexis 3 Base Repository

h2. developer info

Created the pom.xml like this
@mvn org.eclipse.tycho:tycho-pomgenerator-plugin:generate-poms -DgroupId=ch.elexis.base -Dversion=3.0.0-SNAPSHOT@

Then I manually adjusted the pom.xml'x in the base folder and in the ch.elexis.base.ch.p2site

* There is handy tool to see InstallableUnit in P2-Repositories. See "p2-browser":https://github.com/ifedorenko/p2-browser.

It can be easily launched on the console using @javaws  http://ifedorenko.github.com/p2-browser/javaws/com.ifedorenko.p2browser.jnlp@

* The p2 site contains only the artifacts built inside this repository.

* No Eclipse RCP product is built, as we assume that the core product is distributed using the Elexis 3 core.

h2. Building

You need Java 1.8+. Maven 3.0.5. Then you should be able to generate a p2 update site using the following calls:

@git clone https://github.com/elexis/elexis-3-base@
@cd elexis-3-base@
@mvn clean verify -Drepo_variant=release@

Remarks:
* We use verify and not install as target, as we do not push our jars to a maven repository, but let the Jenkins-CI jobs copy the generated the *p2site\target\repository to a subdirectory reachable under http://download.elexis.info/
* Add `-Dmaven.test.skip=true` if you want to skip running the unit tests.
* -Drepo_variant=release as starting with branch 3.3 we begin to use the P2 named like http://download.elexis.info/elexis/<branch-name>/ and use branch names likes 3.3, 3.4

After the build use Help..Add New Software add a new 'local' p2 site pointing at the generated ch.elexis.base.p2site\target\repository directory and install the desired plugins

h2. TODO

* Decide how the release naming will work
@mvn org.eclipse.tycho:tycho-versions-plugin:set-version -DnewVersion=3.0.1-SNAPSHOT@ gives me a NPE.

Here some pointers.
* http://code.google.com/a/eclipselabs.org/p/spray/wiki/DevGuide_Release
* https://docs.sonatype.org/display/M2ECLIPSE/Staging+and+releasing+new+M2Eclipse+release
* https://openflow.stanford.edu/display/Beacon/Releasing
* http://maven.apache.org/maven-release/maven-release-plugin/examples/update-versions.html
* https://community.jboss.org/en/tools/blog/2011/09/17/coping-with-versions-in-large-multi-module-osgi-projects



